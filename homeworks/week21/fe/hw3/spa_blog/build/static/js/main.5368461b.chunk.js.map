{"version":3,"sources":["index.js"],"names":["request","XMLHttpRequest","open","send","data","JSON","parse","responseText","NavBar","jump2random","jumps","props","jump2Home","where","this","page","className","onClick","Component","ListItem","click","index","jump2single","value","Content","a","jump","randonSentence","viewer","location","archive","titleList","Object","values","map","item","title","uniqueID","id","key","body","sentence","content","author","Page","b","setState","state","ReactDOM","render","document","querySelector"],"mappings":"yOAMIA,G,MAAU,IAAIC,gBAClBD,EAAQE,KAAK,MAFD,8CAEW,GACvBF,EAAQG,OACR,IAAMC,EAAOC,KAAKC,MAAMN,EAAQO,cAG1BC,E,2MACFC,YAAc,YAEVC,EADgB,EAAKC,MAAdD,OACD,SAAS,I,EAEnBE,UAAY,YAERF,EADgB,EAAKC,MAAdD,OACD,QAAQ,I,wEAER,IAEAG,EAAiB,SADRC,KAAKH,MAAbI,KAEP,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,WAAhB,QACA,0BAAMC,QAASH,KAAKF,UAAWI,UAAWH,EAAQ,eAAe,WAAjE,QACA,0BAAMI,QAASH,KAAKL,YAAaO,UAAWH,EAAQ,WAAa,iBAAjE,c,GAhBKK,aAuBfC,E,2MACFC,MAAQ,WAAO,IAAD,EACkB,EAAKT,MAA1BU,EADG,EACHA,OACPC,EAFU,EACGA,aACDD,I,wEAIZ,OACI,yBAAKJ,QAASH,KAAKM,MAAOJ,UAAU,aAAaF,KAAKH,MAAMY,W,GARjDL,aAYjBM,E,2MACFF,YAAc,SAACG,IAEXC,EADe,EAAKf,MAAbe,MACF,SAASD,I,EAGlBE,eAAiB,WACb,IACI3B,EAAU,IAAIC,eAIlB,OAHAD,EAAQE,KAAK,MAFD,iCAEW,GACvBF,EAAQG,OACGE,KAAKC,MAAMN,EAAQO,e,wEAIzB,IAAD,SAC8BO,KAAKH,MAAhCiB,EADH,EACGA,OAAOC,EADV,EACUA,SAASC,EADnB,EACmBA,QACvB,GAAe,SAAXF,EAAkB,CAClB,IAAMG,EAAYC,OAAOC,OAAOH,GAASI,KAAI,SAAAC,GAAI,OAAEA,EAAKC,SAClDC,EAAWL,OAAOC,OAAOH,GAASI,KAAI,SAAAC,GAAI,OAAEA,EAAKG,MACvD,OACI,yBAAKtB,UAAU,YACX,yBAAKA,UAAU,SAAf,YACA,yBAAKA,UAAU,iBAAiBe,EAAUG,KAAI,SAACC,EAAKd,GAAN,OAC1C,kBAACF,EAAD,CAAUE,MAAOA,EAAOkB,IAAKF,EAAShB,GAAQE,MAAOY,EAAMb,YAAa,EAAKA,mBAItF,GAAe,WAAXM,EACP,OACI,yBAAKZ,UAAU,cACX,wBAAIA,UAAU,mBAAmBc,EAAQD,GAAUO,OACnD,yBAAKpB,UAAU,eAAec,EAAQD,GAAUW,OAGrD,GAAe,UAAXZ,EAAmB,CAG1B,IAAIxB,EAAOU,KAAKa,iBACZc,EAAWrC,EAAKsC,QAChBC,EAASvC,EAAKuC,OAClB,OACI,yBAAK3B,UAAU,SACX,yBAAKA,UAAU,kBAAkByB,GACjC,yBAAKzB,UAAU,kBAAf,MAAoC2B,S,GA5ClCzB,aAkDhB0B,E,YACF,aAAc,IAAD,8BACT,+CAOJlB,KAAO,SAACD,EAAEoB,GACN,EAAKC,UAAS,SAAAC,GACV,MAAO,CACHnB,OAAOH,EACPI,SAASgB,EACTf,QAAQiB,EAAMjB,aAXtB,EAAKiB,MAAQ,CACTjB,QAAQ1B,EACRwB,OAAO,OACPC,UAAU,GALL,E,sEAkBT,OACI,6BACA,kBAACrB,EAAD,CAAQE,MAAOI,KAAKY,KAAMX,KAAMD,KAAKiC,MAAMnB,SAC3C,yBAAKZ,UAAU,WACX,kBAACQ,EAAD,CAASI,OAAQd,KAAKiC,MAAMnB,OAAQE,QAAShB,KAAKiC,MAAMjB,QAChDJ,KAAMZ,KAAKY,KAAMG,SAAUf,KAAKiC,MAAMlB,iB,GAxB3CX,aA8BnB8B,IAASC,OAAO,kBAACL,EAAD,MAAQM,SAASC,cAAc,W","file":"static/js/main.5368461b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// 抓資料\r\nconst url = 'https://jsonplaceholder.typicode.com/posts'\r\nlet request = new XMLHttpRequest();\r\nrequest.open('GET',url,false)\r\nrequest.send()\r\nconst data = JSON.parse(request.responseText)\r\n\r\n// 頂欄列\r\nclass NavBar extends Component {\r\n    jump2random = () => {\r\n        const {jumps} = this.props\r\n        jumps('about',-1)\r\n    }\r\n    jump2Home = () => {\r\n        const {jumps} = this.props\r\n        jumps('home',-1)\r\n    }\r\n    render() {\r\n        const {page} = this.props\r\n        const where = page === 'home'\r\n        return(\r\n            <div className='navBar'>\r\n                <span className='navBlog'>Blog</span>\r\n                <span onClick={this.jump2Home} className={where ? 'navHome here':'navHome'}>Home</span>\r\n                <span onClick={this.jump2random} className={where ? 'navAbout' : 'navAbout here'}>About</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 蓋頁面\r\nclass ListItem extends Component {\r\n    click = () => {\r\n        const {index,jump2single} = this.props\r\n        jump2single(index)\r\n\r\n    }\r\n    render() {\r\n        return(\r\n            <div onClick={this.click} className='postTitle'>{this.props.value}</div>\r\n        )\r\n    }\r\n}\r\nclass Content extends Component {\r\n    jump2single = (a) => {\r\n        const {jump} = this.props\r\n        jump('single',a)\r\n    }\r\n    \r\n    randonSentence = () => {\r\n        const url = 'http://api.quotable.io/random'\r\n        let request = new XMLHttpRequest();\r\n        request.open('GET',url,false)\r\n        request.send()\r\n        let data = JSON.parse(request.responseText)\r\n        return data\r\n    }\r\n    \r\n    render(){\r\n        const {viewer,location,archive} = this.props\r\n        if (viewer === 'home'){\r\n            const titleList = Object.values(archive).map(item=>item.title)\r\n            const uniqueID = Object.values(archive).map(item=>item.id)\r\n            return(\r\n                <div className='homePage'>\r\n                    <div className='title'>BlogPost</div>\r\n                    <div className='postTitleList'>{titleList.map((item,index) => (\r\n                        <ListItem index={index} key={uniqueID[index]} value={item} jump2single={this.jump2single}/>\r\n                    ))}</div>\r\n                </div>\r\n            )\r\n        } else if (viewer === 'single') {\r\n            return (\r\n                <div className='singlePost'>\r\n                    <h2 className='singlePostTitle'>{archive[location].title}</h2>\r\n                    <div className='postContent'>{archive[location].body}</div>\r\n                </div>\r\n            )\r\n        } else if (viewer === 'about'){\r\n            \r\n\r\n            let data = this.randonSentence()\r\n            let sentence = data.content\r\n            let author = data.author\r\n            return(\r\n                <div className='quote'>\r\n                    <div className='randomSentence'>{sentence}</div>\r\n                    <div className='sentenceAuthor'>by {author}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nclass Page extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            archive:data,\r\n            viewer:'home',\r\n            location:-1\r\n        }\r\n    }\r\n    jump = (a,b) => {\r\n        this.setState(state => {\r\n            return {\r\n                viewer:a,\r\n                location:b,\r\n                archive:state.archive\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n            <NavBar jumps={this.jump} page={this.state.viewer}/>\r\n            <div className='content'>\r\n                <Content viewer={this.state.viewer} archive={this.state.archive}\r\n                        jump={this.jump} location={this.state.location}/>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nReactDOM.render(<Page/>,document.querySelector('main'))\r\n\r\n"],"sourceRoot":""}